
@mixin background-opacity($color, $opacity: 0.3) {
    background: $color;
    background: rgba($color, $opacity);
}

@mixin truncate($width) {
    display: inline-block;
    width: $width;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin shine() {
    position: relative;
    &:after {
        content: " ";
        opacity: 0;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        background: #fff;
        -moz-border-radius: 3px;
        -webkit-border-radius: 3px;
        border-radius: 3px;

        -webkit-animation: animate-shine 2s ease-out infinite;
        -moz-animation: animate-shine 2s ease-out infinite;
    }
}

.shine {
    @include shine();
}

@-webkit-keyframes animate-shine {
    0% {opacity: 0; width: 0;}
    50% {opacity: .5;}
    100% {opacity: 0; width: 95%;}
}


@-moz-keyframes animate-shine {
    0% {opacity: 0; width: 0;}
    50% {opacity: .5;}
    100% {opacity: 0; width: 95%;}
}

@function compact($var-1,        $var-2: false,
                  $var-3: false, $var-4: false,
                  $var-5: false, $var-6: false,
                  $var-7: false, $var-8: false,
                  $var-9: false, $var-10: false) {
  $full: $var-1;
  $vars: $var-2, $var-3, $var-4, $var-5,
         $var-6, $var-7, $var-8, $var-9, $var-10;

  @each $var in $vars {
    @if $var {
      $full: $full, $var;
    }
  }
  @return $full;
}

//
// General purpose helpers
//
@mixin prefixer ($property, $value, $prefixes) {
    @each $prefix in $prefixes {
        @if $prefix == webkit {
            -webkit-#{$property}: $value;
        } @else if $prefix == moz {
            -moz-#{$property}: $value;
        } @else if $prefix == ms {
            -ms-#{$property}: $value;
        } @else if $prefix == o {
            -o-#{$property}: $value;
        } @else if $prefix == spec {
            #{$property}: $value;
        } @else  {
            @warn "Unrecognized prefix: #{$prefix}";
        }
    }
}

@mixin no-userselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.noselect {
    @include no-userselect;
}

@mixin no-highlight {
    outline: none;
}

// creates a triangle
@mixin triangle($size, $color, $direction) {
    height: 0;
    width: 0;

    @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
        border-color: transparent;
        border-style: solid;
        border-width: $size / 2;

        @if $direction == up {
            border-bottom-color: $color;
        } @else if $direction == right {
            border-left-color:   $color;
        } @else if $direction == down {
            border-top-color:    $color;
        } @else if $direction == left {
            border-right-color:  $color;
        }
    }
    @else if ($direction == up-right) or ($direction == up-left) {
        border-top: $size solid $color;
        @if $direction == up-right {
            border-left:  $size solid transparent;
        } @else if $direction == up-left {
            border-right: $size solid transparent;
        }
    }
    @else if ($direction == down-right) or ($direction == down-left) {
        border-bottom: $size solid $color;
        @if $direction == down-right {
            border-left:  $size solid transparent;
        } @else if $direction == down-left {
            border-right: $size solid transparent;
        }
    }
    behavior: url(/static/lib/PIE.htc);
}

// quickly colorize a tags :link, :visited, :hover
@mixin acolor($link-txt-color, $hover-color) {
    a {
        &:link, &:visited, &:active { color: $link-txt-color; }
        &:hover { color: $hover-color; }
    }
}

// remove bullets from lists
@mixin nolist {
    list-style: none;
    list-style-image: none;
    margin: 0;
    padding: 0;
}

@mixin transform($tans) {
    @include prefixer(transform, $trans, moz webkit ms spec);
}

@mixin transition($trans) {
    @include prefixer(transition, $trans, moz webkit ms spec);
}

// add border radius
@mixin radius($radii) {
    @include prefixer(border-radius, $radii, moz webkit ms spec);
    behavior: url(/static/lib/PIE.htc);
}

// add box shadow
@mixin box-shadow($shadow-1: default, $shadow-2: false, $shadow-3: false, $shadow-4: false, $shadow-5: false, $shadow-6: false, $shadow-7: false, $shadow-8: false, $shadow-9: false, $shadow-10: false) {
    @if $shadow-1 == default {
        $shadow-1: -compass-space-list(compact(if($default-box-shadow-inset, inset, false), $default-box-shadow-h-offset, $default-box-shadow-v-offset, $default-box-shadow-blur, $default-box-shadow-spread, $default-box-shadow-color));
    }
    $shadow: compact($shadow-1, $shadow-2, $shadow-3, $shadow-4, $shadow-5, $shadow-6, $shadow-7, $shadow-8, $shadow-9, $shadow-10);
    @include prefixer(box-shadow, $shadow, moz webkit spec);
    behavior: url(/static/lib/PIE.htc);
}

@mixin box-sizing($type: border-box) {
    @include prefixer(box-sizing, $type, moz webkit spec);
}

@mixin opacity($percent) {
    opacity: $percent;
    filter: alpha(opacity=#{$percent*100});
}

@mixin box-emboss($opacity, $opacity2){
    box-shadow: rgba(255,255,255,$opacity) 0 1px 0, inset rgba(255,255,255,$opacity2) 0 1px 0;
    behavior: url(/static/lib/PIE.htc);
}

@mixin letterpress($opacity){
    text-shadow: rgba(255,255,255,$opacity) 0 1px 0;
}

@mixin letterpress2($background){
    background-color: $background;
    color: transparent;
    text-shadow: 0px 1px 2px rgba(255,255,255,0.4);
    -webkit-background-clip: text;
    -moz-background-clip: text;
    background-clip: text;
}

@mixin hide-text{
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}

@mixin hgradient($top, $bottom) {
    background: $top; /*fallback for non-CSS3 browsers*/
    background: -webkit-linear-gradient(left, $top, $bottom);
    background: -moz-linear-gradient(left, $top, $bottom);
    background: -o-linear-gradient(left, $top, $bottom);
    background: linear-gradient(to right, $top, $bottom);
    behavior: url(/static/lib/PIE.htc);
    -pie-background: linear-gradient(to right, $top, $bottom);
    -pie-watch-ancestors: 1;
}

@mixin vgradient($top, $bottom) {
    background: $top; /*fallback for non-CSS3 browsers*/
    background: -webkit-gradient(linear, 0 0, 0 100%, from($top) to($bottom));
    background: -webkit-linear-gradient(top, $top, $bottom);
    background: -moz-linear-gradient(top, $top, $bottom);
    background: -o-linear-gradient(top, $top, $bottom);
    background: linear-gradient(to bottom, $top, $bottom);
    behavior: url(/static/lib/PIE.htc);
    -pie-background: linear-gradient(to bottom, $top, $bottom);
    -pie-watch-ancestors: 1;
}

@mixin transition($tans) {
    @include prefixer(transition, $trans, moz webkit spec);
}

// replace text with an image (for buttons and menus)
@mixin imgreplace {
    display: block;
    border: 0;
    text-indent: -999em;
    overflow: hidden;
    background-color: transparent;
    background-repeat: no-repeat;
    text-align: left;
    direction: ltr;
    *line-height: 0;
    br {
        display: none;
    }
}

@mixin clearfix {
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// vertically center, needs single nested block element
@mixin vcenter($height) {
    height: 100%;
    display: block;
    &:before {
        display: block;
        content: "";
        height:50%;
        margin-bottom: -$height/2;
    }
    > :first-child {
        min-height: $height;
    }
}

@mixin hcenter($width, $min: false) {
    position: relative;
    max-width: $width;
    @if $min {
        min-width: $min;
    }
    margin-left: auto;
    margin-right: auto;
    .container {
        margin-right: auto;
        margin-left: auto;
    }
    &:before,
    &:after {
        display: table;
        content: "";
        line-height: 0;
    }
    &:after {
        clear: both;
    }
}

a {
  text-decoration: none;
  outline: 0;
  -moz-outline-style: none;
}

div.inline {
    display: inline-block;
    line-height: 1em;
}

// expose helpers directly as classes
.nolist {
    @include nolist;
}

.inline-list {
    @include nolist;
    @include clearfix;
    > li {
        position: relative;
        display: inline-block;
        padding: 10px 15px;
        vertical-align: top;
        float: left;
    }
}

.vertical-overflow {
    overflow-y: auto;
}

.horizontal-overflow {
    overflow-x: auto;
}

.selectable-inline-list {
    @include nolist;
    @include clearfix;
    > li {
        position: relative;
        display: inline-block;
        padding: 10px 15px;
        float: left;
        opacity: 0.8;
        cursor: pointer;
        &:hover {
            opacity: 1.0;
        }

        &.active {
            &::after {
                display: inline-block;
                  font: normal normal normal 14px/1 FontAwesome;
                  font-size: inherit;
                  text-rendering: auto;
                  -webkit-font-smoothing: antialiased;
                  -moz-osx-font-smoothing: grayscale;
                  transform: translate(0, 0);

                content: "\f00c";
                position: absolute;
                left: 0;
                top: 0;
                font-size: 16px;
                color: green;
            }
        }
    }
}

.selectable-list {
    @include nolist;
    > li {
        position: relative;
        display: block;
        padding: 10px 15px;
        background-color: #fff;
        border-bottom: 1px solid #ddd;
        cursor: pointer;
        &:hover {
            text-decoration: none;
            background-color: #f5f5f5;
        }
    }
}

.noselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.clearfix2 {
    @include clearfix;
}

// .container {
//  @include clearfix;
// }

.uppercase {
    text-transform: uppercase;
}

.lowercase {
    text-transform: lowercase;
}

.flex-row {
    display: flex;
    flex-direction: row;
    flex-grow: 1;
    &.flex-column-center {
        align-items: center;
        justify-content: center;
    }

    > .flex-grow {
        flex-grow: 1;
    }

    > .flex-align-right, > .flex-right {
        margin-right: auto;
        // align-self: flex-start;
    }

    > .flex-align-left, > .flex-left {
        margin-left: auto;
        // align-self: flex-end;
    }
}
.flex-column, .flex-magic {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    &.flex-column-center {
        align-items: center;
        justify-content: center;
    }

    > .flex-grow {
        flex-grow: 1;
    }

    > .flex-align-top, > .flex-top {
        margin-bottom: auto;
        // align-self: flex-start;
    }

    > .flex-align-bottom, > .flex-bottom {
        margin-top: auto;
        // align-self: flex-end;
    }
    > .flex-align-right, > .flex-right {
        margin: auto;
        flex-grow: 1;
    }

    > .flex-align-left, > .flex-left {
        margin: auto;
        flex-grow: 1;
    }
}
/* Landscape */
@media screen and (orientation:landscape) {
    .flex-magic {
        flex-direction: row;
        > .flex-align-top, > .flex-top {
            margin: auto;
            flex-grow: 1;
        }

        > .flex-align-bottom, > .flex-bottom {
            margin: auto;
            flex-grow: 1;
        }
    }
}

.grid-row {
    display: table;
    &.grid-row-full, &.grid-full {
        width: 100%;
    }

    &.grid-full-height {
        height: 100%;
    }

    &.grid-padded {
        > .grid-cell {
            padding: 8px;
        }
    }

    &.grid-border-top {
        border-top: 1px solid #AEAEAE;
    }

    &.grid-border-bottom {
        border-bottom: 1px solid #AEAEAE;
    }
}

.grid-cell {
    display: table-cell;

    &.grid-top {
        vertical-align: top;
    }

    &.grid-bottom {
        vertical-align: bottom;
    }

    &.grid-middle {
        vertical-align: middle;
    }

    &.padded {
        padding: 8px;
    }

    &.hpadded {
        padding: 0px 8px;
    }

    &.grid-1 {
      width: 8.333333333333332%;
    }
    &.grid-2 {
      width: 16.666666666666664%;
    }
    &.grid-3 {
      width: 25%;
    }
    &.grid-4 {
      width: 33.33333333333333%;
    }
    &.grid-5 {
      width: 41.66666666666667%;
    }
    &.grid-6 {
      width: 50%;
    }
    &.grid-7 {
      width: 58.333333333333336%;
    }
    &.grid-8 {
      width: 66.66666666666666%;
    }
    &.grid-9 {
      width: 75%;
    }
    &.grid-10 {
      width: 83.33333333333334%;
    }
    &.grid-11 {
      width: 91.66666666666666%;
    }
    &.grid-12 {
      width: 100%;
    }
}

.col-fixed-xxsmall {
    display: inline-block;
    float: left;
    width: 140px;
    position: relative;
    min-height: 1px;
}

.col-fixed-xsmall {
    display: inline-block;
    float: left;
    width: 180px;
    position: relative;
    min-height: 1px;
}

.col-fixed-small {
    display: inline-block;
    float: left;
    width: 200px;
    position: relative;
    min-height: 1px;
}

.column {
    position: relative;
    display: inline-block;
    float: left;
    min-height: 1px;

    &.input-xsmall {
        width: 180px;
        label {
            width: 100px;
        }

        input[type=text],
        input[type=email],
        input[type=password],
        input[type=phone],
        textarea, select {
            width: 60px;
        }
    }


    &.input-small {
        width: 240px;
        label {
            width: 120px;
        }

        input[type=text],
        input[type=email],
        input[type=password],
        input[type=phone],
        textarea, select {
            width: 70px;
        }
    }

    &.xxxsmall {
        width: 100px;
    }

    &.xxsmall {
        width: 140px;
    }

    &.xsmall {
        width: 180px;
    }

    &.small {
        width: 100%;
        max-width: 240px;
    }
    &.medium {
        width: 100%;
        max-width: 350px;
    }
    &.large {
        width: 100%;
        max-width: 550px;
    }
    &.full {

    }

    &.grid-1 {
      width: 8.333333333333332%;
    }
    &.grid-2 {
      width: 16.666666666666664%;
    }
    &.grid-3 {
      width: 25%;
    }
    &.grid-4 {
      width: 33.33333333333333%;
    }
    &.grid-5 {
      width: 41.66666666666667%;
    }
    &.grid-6 {
      width: 50%;
    }
    &.grid-7 {
      width: 58.333333333333336%;
    }
    &.grid-8 {
      width: 66.66666666666666%;
    }
    &.grid-9 {
      width: 75%;
    }
    &.grid-10 {
      width: 83.33333333333334%;
    }
    &.grid-11 {
      width: 91.66666666666666%;
    }
    &.grid-12 {
      width: 100%;
    }

    &.grid-20 {
      width: 20%;
    }

    &.padded {
        padding: 6px;
    }
}

.irow {
    &:before {
        display: table;
        content: " ";
    }
    &:after {
        display: table;
        content: " ";
        clear: both;
    }

    &.padded {
        padding: 6px;
    }

    &.irow-no-overflow {
        overflow: hidden;
    }
    // overflow: hidden;
    // white-space: nowrap;
}

.text-lg {
    font-size: 1.4em;
}

.text-md {
    font-size: 1em;
}

.text-sm {
    font-size: 0.8em;
}

.text-xs {
    font-size: 0.5em;
}

.text-bold {
    font-weight: bold;
}

.text-right {
    text-align: right;
}


.center-children {
    text-align: center;
}

.left-children {
    text-align: left;
}

.right-children {
    text-align: right;
}

// layout helpers
.pull-left {
    float: left;
}

.overflow-hidden {
    overflow: hidden;
}

.pull-right {
    float: right;
}

.fill-width {
    width: 100%;
}

.affix {
    position: fixed;
}

// .text-sm {
//  font-size: 10px;
// }

// .text-xs {
//  font-size: 8px;
// }

.absolute-center {
  width: 50%;
  height: 50%;
  overflow: auto;
  margin: auto;
  position: absolute;
  top: 0; left: 0; bottom: 0; right: 0;
}

.absolute-top {
    position: absolute;
    top: 0;
}

.absolute-bottom {
    position: absolute;
    bottom: 0;
}

.absolute-right {
    position: absolute;
    right: 0;
}

.absolute-left {
    position: absolute;
    left: 0;
}

.fixed-bottom {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
}

form.form-horizontal {
    label {
        display: inline-block;
        float: left;
        width: 100px;
        text-align: right;
        padding-top: 10px;
        margin-right: 6px;
    }
    input[type=text],
    input[type=email],
    input[type=password],
    input[type=phone],
    textarea, select {
        display: inline-block;
        float: left;
        padding-left: 10px;
        margin-bottom: 0;
        margin-top: 4px;
        width: 200px;
        &:disabled {
            color: #cbcbcb;
            font-style: italic;
        }
        @include clearfix;
    }
}

form {
    input.form-control.error {
        border: 1px solid red;
    }
}


.showtip{
    display: inline;
    position: relative;
}

.showtip:hover:after{
    font-size: 12px;
    background: #333;
    background: rgba(0,0,0,.8);
    border-radius: 5px;
    bottom: 26px;
    color: #fff;
    content: attr(title);
    left: 50%;
    padding: 5px 15px;
    position: absolute;
    z-index: 98;
    width: auto;
}

.showtip:hover:before{
    border: solid;
    border-color: #333 transparent;
    border-width: 6px 6px 0 6px;
    bottom: 20px;
    content: "";
    left: 50%;
    position: absolute;
    z-index: 99;
}

img.image-lg {
    max-width: 300px;
    max-height: 240px;
}

img.image-md {
    max-width: 120px;
    max-height: 120px;
}

img.image-sm {
    max-width: 60px;
    max-height: 60px;
}

img.image-xs {
    max-width: 32px;
    max-height: 32px;
}

img.image-circle {
    border: 50%;
}

img.image-padded {
    margin: 4px;
}

img.image-border {
    border: 1px solid white;
    box-shadow: 0 0 3px rgba(0,0,0,0.3);
}


div.img-holder {
    display: inline-block;
    text-align: center;
    margin: auto auto;
    img {
        height: 100%;
        vertical-align: top;
    }

    &.img-holder-circle {
        border-radius: 50%;
        overflow: hidden;
    }

    &.img-holder-border {
        border: 2px solid white;
        background: white;
    }

    &.img-holder-border-gray {
        border: 2px solid #cccccc;
        background: white;
    }

    &.img-holder-border-shadow {
        border: 2px solid white;
        box-shadow: 0 0 3px rgba(0,0,0,0.3);
    }

    &.img-holder-auto {
        height: 100px;
        width: 100px;
        font-size: 60px;
        line-height: 90px;
    }

    &.img-holder-xs {
        height: 24px;
        width: 24px;
        font-size: 13px;
        line-height: 20px;
    }

    &.img-holder-sm {
        height: 40px;
        width: 40px;
        font-size: 19px;
        line-height: 35px;
    }

    &.img-holder-md {
        height: 60px;
        width: 60px;
        font-size: 30px;
        line-height: 55px;
    }

    &.img-holder-lg {
        height: 100px;
        width: 100px;
        font-size: 60px;
        line-height: 90px;
    }

    &.img-hover-zoom {
        position: absolute;
        top:0;
        right: 0;
        left: 0;
        bottom: 0;
        height: 100%;
        width: 100%;

        img {
            height: 100%;
            width: 100%;
            -webkit-transition: all 0.5s ease;
            -moz-transition: all 0.5s ease;
            -o-transition: all 0.5s ease;
            -ms-transition: all 0.5s ease;
            transition: all 0.5s ease;
        }

        &:hover {
            img {
                height: 110%;
                width: 110%;
            }
        }
    }

    &.img-active-zoom {
        position: absolute;
        top:0;
        right: 0;
        left: 0;
        bottom: 0;
        height: 100%;
        width: 100%;

        img {
            height: 100%;
            width: 100%;
            -webkit-transition: all 0.5s ease;
            -moz-transition: all 0.5s ease;
            -o-transition: all 0.5s ease;
            -ms-transition: all 0.5s ease;
            transition: all 0.5s ease;
        }

        &:active, &:focus {
            img {
                height: 110%;
                width: 110%;
            }
        }
    }
}

div.user-box {
    padding: 4px;
    display: inline-block;
    vertical-align: middle;
    div.img-holder {
        display: inline-block;
        vertical-align: middle;
    }
    div.user-name {
        display: inline-block;
        vertical-align: middle;
    }
}

.panel-row {
    border-top: 1px solid #E9E9E9;
    padding: 2px;
    &.panel-row-sm {
        font-size: 12px;
    }

    &.panel-row-xs {
        font-size: 10px;
    }
}

.font-light {
    font-weight: lighter;
}

.aligner {
    display:table;
    height: 100%;
    width: 100%;
    // pointer-events:none;
}
.vertical-align-center {
    /* To center vertically */
    display: table-cell;
    vertical-align: middle;
    // pointer-events:none;
    // this goes into the centered div
    // pointer-events:all;
}

.vertical-center-wrapper {
    display:table;
    height: 100%;
    width: 100%;
    // pointer-events:none;
}
.vertical-center {
    /* To center vertically */
    display: table-cell;
    vertical-align: middle;
    // pointer-events:none;
    // this goes into the centered div
    // pointer-events:all;
}

@mixin text_3d_simple() {
    text-shadow: 0 1px 0 #ccc,
                  0 2px 0 #c9c9c9,
                  0 3px 0 #bbb,
                  0 4px 0 #b9b9b9,
                  0 5px 0 #aaa,
                  0 6px 1px rgba(0,0,0,.1),
                  0 0 5px rgba(0,0,0,.1),
                  0 1px 3px rgba(0,0,0,.3),
                  0 3px 5px rgba(0,0,0,.2),
                  0 5px 10px rgba(0,0,0,.25),
                  0 10px 10px rgba(0,0,0,.2),
                  0 20px 20px rgba(0,0,0,.15);
}

@mixin text_3d_offset() {
    text-shadow: 0 1px #808d93,
    -1px 0 #cdd2d5,
    -1px 2px #808d93,
    -2px 1px #cdd2d5,
    -2px 3px #808d93,
    -3px 2px #cdd2d5,
    -3px 4px #808d93,
    -4px 3px #cdd2d5,
    -4px 5px #808d93,
    -5px 4px #cdd2d5,
    -5px 6px #808d93,
    -6px 5px #cdd2d5,
    -6px 7px #808d93,
    -7px 6px #cdd2d5,
    -7px 8px #808d93,
    -8px 7px #cdd2d5;
}

.text-3d-simple {
    @include text_3d_simple();
}

.text-3d-offset {
    @include text_3d_simple();
}



@mixin timer($item, $duration, $size, $bg, $color, $border, $hover: running) {
  #{$item}, #{$item} * { @include box-sizing(border-box); }

  #{$item} {
    position: relative;
    width: $size;
    height: $size;
  }

  #{$item} .pie {
    width: 50%;
    height: 100%;
    transform-origin: 100% 50%;
    position: absolute;
    background: $color;
    border: #{$border};
  }

  #{$item} .spinner {
    border-radius: 100% 0 0 100% / 50% 0 0 50%;
    z-index: 200;
    border-right: none;
    animation: rota $duration + s linear;
  }

  #{$item}:hover .spinner,
  #{$item}:hover .filler,
  #{$item}:hover .mask {
    animation-play-state: $hover;
  }

  #{$item} .filler {
    border-radius: 0 100% 100% 0 / 0 50% 50% 0;
    left: 50%;
    opacity: 0;
    z-index: 100;
    animation: opa $duration + s steps(1,end) reverse;
    border-left: none;
  }

  #{$item} .mask {
    width: 50%;
    height: 100%;
    position: absolute;
    background: $bg;
    opacity: 1;
    z-index: 300;
    animation: opa $duration + s steps(1,end);
  }

  @keyframes rota {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes opa {
    0% { opacity: 1; }
    50%, 100% { opacity: 0; }
  }
}

@mixin timer_setup($item, $duration, $size, $color, $border, $hover: running) {
  #{$item}, #{$item} * { @include box-sizing(border-box); }

  #{$item} {
    width: $size;
    height: $size;
  }

  #{$item} .pie {
    width: 50%;
    height: 100%;
    transform-origin: 100% 50%;
    position: absolute;
    background: $color;
    border: #{$border};
  }

  #{$item} .spinner {
    border-radius: 100% 0 0 100% / 50% 0 0 50%;
    z-index: 200;
    border-right: none;
    // animation: rota $duration + s linear;
  }

  #{$item}:hover .spinner,
  #{$item}:hover .filler,
  #{$item}:hover .mask {
    animation-play-state: $hover;
  }

  #{$item} .filler {
    border-radius: 0 100% 100% 0 / 0 50% 50% 0;
    left: 50%;
    opacity: 0;
    z-index: 100;
    // animation: opa $duration + s steps(1,end) reverse;
    border-left: none;
  }

  #{$item} .mask {
    width: 50%;
    height: 100%;
    position: absolute;
    background: inherit;
    opacity: 1;
    z-index: 300;
    // animation: opa $duration + s steps(1,end);
  }

  @keyframes rota {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes opa {
    0% { opacity: 1; }
    50%, 100% { opacity: 0; }
  }
}

@media screen and ( max-height: 970px ){
    div.hide-vertical-md {
        display: none;
    }
}


@media screen and ( max-height: 760px ){
    div.hide-vertical-sm {
        display: none;
    }
}

@media screen and ( max-height: 560px ){
    div.hide-vertical-xs {
        display: none;
    }
}


@media screen and ( max-width: 760px ){
    div.img-holder {
        &.img-holder-auto {
            height: 60px;
            width: 60px;
            font-size: 30px;
            line-height: 55px;
        }
    }
}




